@import "../../mixins";

#changes-list {
  min-height: 0;
}

/** A React component holding the currently selected repository's changes */
.changes-list-container {
  flex-grow: 1;
  display: flex;
  flex-direction: column;

  .header {
    background: var(--box-alt-background-color);
    border-bottom: 1px solid var(--box-border-color);
    display: flex;
    flex-shrink: 0;
    flex-grow: 0;
    padding: var(--spacing-half);

    label {
      font-weight: var(--font-weight-semibold);
      flex-grow: 1;
      text-align: center;
    }
  }

  .list-item {
    padding: var(--spacing-half);
    border-bottom: var(--base-border);
  }

  // Only use special colors for the change type icons when
  // the list item doesn't have active focus. If it does we
  // fall back to using the ambient foreground color of the
  // list item.
  .list-item:not(:focus) {
    .status {
      &-new .octicon { fill: var(--color-new); }
      &-modified .octicon { fill: var(--color-modified); }
      &-deleted .octicon { fill: var(--color-deleted); }
    }
  }

  .changed-file {
    display: flex;
    flex-grow: 1;

    // See https://css-tricks.com/flexbox-truncated-text/
    min-width: 0;

    input, .status { flex-shrink: 0; }

    .path {
      flex-grow: 1;
      @include ellipsis;
    }

    .octicon {
      vertical-align: text-bottom;
    }
  }
}

.undo-enter {
  max-height: 0;
  overflow: hidden;
}

.undo-enter.undo-enter-active {
  // It doesn't really matter what `maxHeight` we set here so long as it's
  // greater than or equal to the height that `UndoCommit` will want.
  max-height: 200px;

  // Note that this duration *must* match the `UndoCommitAnimationTimeout`
  // specified in `changes/index.tsx`.
  transition: max-height 500ms ease-in;
}

.undo-leave {
  max-height: 200px;
}

.undo-leave.undo-leave-active {
  max-height: 0;

  // Note that this duration *must* match the `UndoCommitAnimationTimeout`
  // specified in `changes/index.tsx`.
  transition: max-height 500ms ease-out;
}
