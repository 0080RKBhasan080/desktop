#!/usr/bin/env node

'use strict'

const fs = require('fs');
const process = require('process');
const xml2js = require('xml2js');
const got = require('got');
const path = require('path');

console.log('Downloading latest version of octicon sprite svg');

got('https://github.com/primer/octicons/raw/master/build/sprite.octicons.svg')
  .then((res) => {
    xml2js.parseString(res.body, function (err, result) {
      const viewBoxRe = /0 0 (\d+) (\d+)/
      const out = fs.createWriteStream(path.resolve(__dirname, '../src/octicons.generated.ts'));

      out.write("export class OcticonSymbol {\n")

      out.write("\n  public constructor(public w: number, public h: number, public d: string) { }\n\n")
      let count = 0;
      result.svg.symbol.forEach(function(symbol) {
        count++;

        const id = symbol.$.id;
        const viewBox = symbol.$.viewBox;
        const pathData = symbol.path[0].$.d;

        const viewBoxMatch = viewBoxRe.exec(viewBox);

        if(!viewBoxMatch) {
          console.error(`Unexpected viewBox format for ${id}`);
          process.exit(1);
        }

        const [, w, h] = viewBoxMatch
        const jsFriendlyName = id.replace(/-/g, '_');

        out.write(`  public static get ${jsFriendlyName}() { return new OcticonSymbol(${w}, ${h}, '${pathData}') }\n`);
      });

      out.write("}\n");
      out.end();

      console.log(`Wrote ${count} octicons`);
    });
  })
  .catch((err) => {
    console.log(`Failed downloading octicon sprite svg: ${err.message}`);
    process.exit(1);
  })
