#!/usr/bin/env node

'use strict'

const fs = require('fs');
const process = require('process');
const xml2js = require('xml2js');

var xml = fs.readFileSync('sprite.octicons.svg');

xml2js.parseString(xml, function (err, result) {
  const viewBoxRe = /0 0 (\d+) (\d+)/
  const out = fs.createWriteStream('octicons.generated.ts');

  out.write("export class OcticonSymbol {\n")

  out.write("\n  public constructor(public w: number, public h: number, public d: string) { }\n\n")

  result.svg.symbol.forEach(function(symbol) {
    const id = symbol.$.id;
    const viewBox = symbol.$.viewBox;
    const pathData = symbol.path[0].$.d;

    const viewBoxMatch = viewBoxRe.exec(viewBox);

    if(!viewBoxMatch) {
      console.error("Unexpected viewBox format for " + id);
      process.exit(1);
    }

    const [, w, h] = viewBoxMatch
    const jsFriendlyName = id.replace(/-/g, '_');

    out.write(`  public static get ${jsFriendlyName}() { return new OcticonSymbol(${w}, ${h}, '${pathData}'); }\n`);
  });

  out.write("}\n");
  out.end();
});
